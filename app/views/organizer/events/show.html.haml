.row
  .col-xs-12
    .heading.text-center
      %h2 Event Details

.event
  .event-links.text-center
    .row
      .col-sm-2
      .col-sm-2.col-xs-12
        = link_to "Proposals", organizer_event_proposals_path(event)
      .col-sm-2.col-xs-12
        = link_to "Program", organizer_event_program_path(event)
      .col-sm-2.col-xs-12
        = link_to "Schedule", organizer_event_sessions_path(event)
      .col-sm-2.col-xs-12
        = link_to "Edit Event", edit_organizer_event_path(event)
      .col-sm-2

  .event-basic-details
    %h4
      %strong Basic Details
    %table.table
      %tr
        %td Url
        %td
          %a{ href: event.url } #{event.url}
      %tr
        %td Slug
        %td= event.slug
      %tr
        %td Email
        %td= event.contact_email

      %tr
        %td Guidelines
        %td
          - if event.guidelines.present?
            = event.guidelines.truncate(150, separator: /\s/)
          .row
            .col-xs-12.col-sm-4.col-md-3
              = link_to "Public guidelines", event_path(slug: event.slug)
            .col-xs-12.col-sm-4.col-md-3
              = link_to "Edit Guidelines", edit_organizer_event_path(:form => "guidelines_form")


  .event-dates
    %h4
      %strong Dates
    %table.table
      %tr
        %td CFP Opens on
        %td= event.cfp_opens
      %tr
        %td CFP Closes on
        %td
          = event.cfp_closes
          %p.help-block #{event.cfp_days_remaining} days remaining

      %tr
        %td Event Start date
        %td= event.start_date.to_s(:month_day_year) unless event.start_date.blank?

      %tr
        %td Event End date
        %td= event.end_date.to_s(:month_day_year) unless event.end_date.blank?

    .col-sm-4
      %h4 Proposal Stats
      %dl.dl-horizontal
        %dt Total:
        %dd #{event.proposals.count}
        .subset
          %dt Reviewed:
          %dd #{event.proposals.rated.count} (#{event.reviewed_percent})
        %dt Accepted:
        %dd #{event.proposals.accepted.count}
        .subset
          %dt Confirmed:
          %dd #{event.proposals.accepted.confirmed.count} (#{event.confirmed_percent})
        .subset
          %dt Scheduled:
          %dd #{event.proposals.scheduled.count} (#{event.scheduled_percent})
        %dt Waitlisted:
        %dd #{event.proposals.waitlisted.count}
        .subset
          %dt Confirmed:
          %dd #{event.proposals.waitlisted.confirmed.count} (#{event.waitlisted_percent})
      %h4 Proposal Tags
      %dd=event.valid_proposal_tags
      %dl.dl-horizontal

      %h4 Review Tags
      %dd=event.valid_review_tags
      %dl.dl-horizontal
      %p= link_to "Edit Tags", edit_organizer_event_path(:form => "tags_form"), class: "btn btn-primary"

      %h4 Fields
      %dd=event.fields
      %p= link_to "Add Custom Field", edit_custom_fields_organizer_event_path(event), class: "btn btn-primary"


    .col-sm-4
      %h4 Tracks
      -if event.track_count.present?
        - event.track_count.sort_by{|k,v| v}.reverse.each_slice(8).to_a.each do |row|
          %ul#columns.list-inline
            -row.each do |name, count|
              %li
                .label.label-success
                  = name
                  = count
      -else
        %p No Tracks

    .col-sm-4
      %h4 Speaker Notifcations
      = link_to 'Edit Speaker Notifications', edit_organizer_event_path(:form => "speaker_notifications_form"), class: "btn btn-primary"
      %dt Accept:
      %dd=event.speaker_notification_emails['accept'].truncate(75, separator: /\s/)
      %dt Reject:
      %dd=event.speaker_notification_emails['reject'].truncate(75, separator: /\s/)
      %dt Waitlist:
      %dd=event.speaker_notification_emails['waitlist'].truncate(75, separator: /\s/)


  = render partial: 'participants',
    locals: { event: event, participants: participants,
      rating_counts: rating_counts }
