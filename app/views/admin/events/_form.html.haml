.row
  .col-xs-6.col-xs-offset-1
    %h3.text-center Event Information
    .form-group
      = f.label :name
      = f.text_field :name, class: 'form-control', placeholder: 'Name of the event'
    .form-group
      = f.label :contact_email
      = f.text_field :contact_email, class: 'form-control', placeholder: 'Event email'
    .form-group
      = f.label :slug
      = f.text_field :slug, class: 'form-control', placeholder: 'Slug for the event URL, may be left blank'
      %p.help-block The slug will be used in public facing URLs. If you leave this field blank, a slug will be generated based on the name.
    .form-group
      = f.label :url
      = f.text_field :url, class: 'form-control', placeholder: 'Event\'s URL'

  .col-xs-4
    %h3.text-center CFP Dates
    .form-group
      = f.label :opens_at
      = f.object.cfp_opens
      = f.text_field :opens_at, value: (f.object.opens_at.blank? ? "" : f.object.opens_at.to_s(:long_with_zone) ), class: 'form-control'
      -#%p.help-block Open proposal end date is optional. If you do not provide one the CFP will defer to its state.
    .form-group
      = f.label :closes_at
      = f.object.cfp_closes
      = f.text_field :closes_at, value: (f.object.closes_at.blank? ? "" : f.object.closes_at.to_s(:long_with_zone) ), class: 'form-control'
      -#%p.help-block Open proposal end date is optional. If you do not provide one the CFP will defer to its state.

    %h3.text-center Event Dates
    .form-group
      = f.label :start_date
      = f.object.start_date.to_s(:month_day_year) unless f.object.start_date.blank?
      = f.text_field :start_date, value: (f.object.start_date.blank? ? "" : f.object.start_date.to_s(:month_day_year) ), class: 'form-control'
    .form-group
      = f.label :end_date
      = f.object.end_date.to_s(:month_day_year) unless f.object.end_date.blank?
      = f.text_field :end_date, value: (f.object.end_date.blank? ? "" : f.object.end_date.to_s(:month_day_year) ), class: 'form-control'
      -#%p.help-block Open proposal end date is optional. If you do not provide one the CFP will defer to its state.
    .form-group
      = f.label :state
      = f.select :state, ['open', 'closed'], {}, class: 'form-control'

.row
  .col-xs-10.col-xs-offset-1
    .form-submit
      - if event && event.persisted? && current_user.admin?
        = link_to 'Delete Event',
          admin_event_path(event),
          method: :delete,
          data: { confirm: 'Are you sure you want to delete this event?' },
          class: 'btn btn-danger pull-left btn-lg'

      %button.pull-right.btn.btn-lg.btn-success{:type => "submit"} Save
